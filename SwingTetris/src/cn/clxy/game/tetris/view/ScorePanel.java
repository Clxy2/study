package cn.clxy.game.tetris.view;

import java.awt.Dimension;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

import cn.clxy.game.tetris.model.Score;
import cn.clxy.game.tetris.util.StringUtil;

/**
 * @author clxy
 */
public class ScorePanel extends javax.swing.JPanel {

    private Date startTime;
    private Timer timer;
    private Score score = new Score("Welcome.");

    /** Creates new form ScorePanel */
    public ScorePanel() {

        initComponents();
        setPreferredSize(new Dimension(200, 150));
    }

    public void start() {

        score = new Score("Welcome.");
        binding();

        startTime = new Date();
        score.setStartTime(startTime);

        timer = new Timer(true);
        timer.schedule(new TimerTask() {

            @Override
            public void run() {
                long interval = new Date().getTime() - startTime.getTime();
                timeLabel.setText(StringUtil.formatInterval(interval));
            }
        }, 0, 1000);
    }

    public void end() {

        if (timer != null) {
            timer.cancel();
        }
        score.setOverTime(new Date());
    }

    public void addLine(int line) {
        score.addLine(line);
        binding();
    }

    public void addPoint(int point) {
        score.addPoint(point);
        binding();
    }

    public void setScoreName(String name) {

        score.setName(name);
        binding();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        levelL = new javax.swing.JLabel();
        lineLabel = new javax.swing.JLabel();
        pointLabel = new javax.swing.JLabel();
        lineL = new javax.swing.JLabel();
        pointL = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setName("Form"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
                .getInstance(cn.clxy.game.tetris.App.class).getContext().getResourceMap(
                        ScorePanel.class);
        levelL.setFont(resourceMap.getFont("score.font")); // NOI18N
        levelL.setForeground(resourceMap.getColor("levelL.foreground")); // NOI18N
        levelL.setText(resourceMap.getString("levelL.text")); // NOI18N
        levelL.setName("levelL"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(levelL, gridBagConstraints);

        lineLabel.setFont(resourceMap.getFont("score.font")); // NOI18N
        lineLabel.setForeground(resourceMap.getColor("lineL.foreground")); // NOI18N
        lineLabel.setText(resourceMap.getString("lineLabel.text")); // NOI18N
        lineLabel.setName("lineLabel"); // NOI18N
        lineLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lineLabel, gridBagConstraints);

        pointLabel.setFont(resourceMap.getFont("score.font")); // NOI18N
        pointLabel.setForeground(resourceMap.getColor("pointL.foreground")); // NOI18N
        pointLabel.setText(resourceMap.getString("pointLabel.text")); // NOI18N
        pointLabel.setName("pointLabel"); // NOI18N
        pointLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(pointLabel, gridBagConstraints);

        lineL.setFont(resourceMap.getFont("score.font")); // NOI18N
        lineL.setForeground(resourceMap.getColor("lineL.foreground")); // NOI18N
        lineL.setText(resourceMap.getString("lineL.text")); // NOI18N
        lineL.setName("lineL"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(lineL, gridBagConstraints);

        pointL.setFont(resourceMap.getFont("score.font")); // NOI18N
        pointL.setForeground(resourceMap.getColor("pointL.foreground")); // NOI18N
        pointL.setText(resourceMap.getString("pointL.text")); // NOI18N
        pointL.setName("pointL"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(pointL, gridBagConstraints);

        levelLabel.setFont(resourceMap.getFont("score.font")); // NOI18N
        levelLabel.setForeground(resourceMap.getColor("levelLabel.foreground")); // NOI18N
        levelLabel.setText(resourceMap.getString("levelLabel.text")); // NOI18N
        levelLabel.setName("levelLabel"); // NOI18N
        levelLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(levelLabel, gridBagConstraints);

        timeLabel.setFont(resourceMap.getFont("score.font")); // NOI18N
        timeLabel.setForeground(resourceMap.getColor("timeLabel.foreground")); // NOI18N
        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText(resourceMap.getString("timeLabel.text")); // NOI18N
        timeLabel.setName("timeLabel"); // NOI18N
        timeLabel.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(timeLabel, gridBagConstraints);

        nameLabel.setFont(resourceMap.getFont("score.font")); // NOI18N
        nameLabel.setForeground(resourceMap.getColor("nameLabel.foreground")); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText(resourceMap.getString("nameLabel.text")); // NOI18N
        nameLabel.setName("nameLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(nameLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel levelL;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JLabel lineL;
    private javax.swing.JLabel lineLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel pointL;
    private javax.swing.JLabel pointLabel;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
    private static final long serialVersionUID = 1L;

    public Score getScore() {
        return score;
    }

    public void setScore(Score score) {
        this.score = score;
        binding();
    }

    private void binding() {

        nameLabel.setText(score.getName());
        levelL.setText(String.valueOf(score.getLevel()));
        lineL.setText(String.valueOf(score.getLine()));
        pointL.setText(String.valueOf(score.getPoint()));
    }
}
